@model testDMS.Models.DONATION

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    td {
        padding: 15px;
        text-align: left;
        width: 50%;
        vertical-align: top;
    }

    th {
        padding: 15px;
        text-align: center;
        width: 50%;
        background-color: #0096D7;
    }

    table {
        border-collapse: initial;
    }

    input[type=submit] {
        background: transparent url("../../Images/button_update-donation.png") 0 0 no-repeat;
        font-weight: bold;
        display: inline-block;
        text-align: center;
        cursor: pointer;
        height: 70px;
        width: 201px;
        border: 3px solid #fff;
        border-radius: 2em;
        color: transparent;
    }
</style>
<hr />
<div class="well well-lg">
    <div style="display: inline-block">
        <h4>Update Donation Record</h4>
    </div>

    <div style="display: inline-block;float:right">
        <input type="button" style="background-color:#0096D7;" class="btn btn-info" value="Back" onclick="location.href='@Url.Action("Index", "DONATIONs")'" />
    </div>
</div>

@using (Html.BeginForm("Edit", "DONATIONs", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <table class="table table-striped">
            <tr>
                <th>
                    Donation Information
                </th>
                <th>
                    Check Image
                </th>
            </tr>
            <tr>
                <td>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.DonationId)
                    @Html.HiddenFor(model => model.DonorId)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TypeOf, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownList("TypeOf", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TypeOf, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DateRecieved, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.DateRecieved, new { htmlAttributes = new { @class = "form-control", type = "date", name = "eDate" } })
                            @Html.ValidationMessageFor(model => model.DateRecieved, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.GiftMethod, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownList("GiftMethod", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.GiftMethod, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DateGiftMade, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.DateGiftMade, new { htmlAttributes = new { @class = "form-control", type = "date"} })
                            @Html.ValidationMessageFor(model => model.DateGiftMade, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.GiftRestrictions, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.GiftRestrictions, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.GiftRestrictions, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <hr style="width:80%" />
                    <div class="form-group">
                        <div class="col-md-offset-3 col-md-9">
                            <input type="submit" value="" class="btn btn-default" />
                        </div>
                    </div>
                </td>

                <td>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Department, "Department", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownList("Department", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Fund, "Fund", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownList("Fund", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Fund, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.GL, "GL", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownList("GL", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.GL, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Program, "Program", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownList("Program", null, htmlAttributes: new { @class = "form-control"})
                            @Html.ValidationMessageFor(model => model.Program, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.GrantS, "Grants", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownList("Grant", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.GrantS, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Notes, "Notes", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextArea("Notes", Model.Notes, new { @class = "form-control", @style = "max-width: 60%" })
                            @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        <div style="position:relative;">
                            <input type="file" id="Check" name="image" /><br />
                            <span class="label label-info" id="upload-file-info"></span>
                            @if (Model.FILES.Count == 0)
                            {
                                <div class="form-control-static">No Image Uploaded</div>
                            }
                            else
                            {
                                <img class="img-thumbnail" width="150" height="150" src="@Url.Action("GetImageOne", "DONATIONs", new {Model.DonationId, Model.DonorId})">
                                @Html.ActionLink("Delete", "RemoveImageOne", new { Model.DonationId, Model.DonorId })
                                if (Model.FILES.Count > 1)
                                {
                                    <img class="img-thumbnail" width="150" height="150" src="@Url.Action("GetImageTwo", "DONATIONs", new {Model.DonationId, Model.DonorId})" />
                                }
                                else
                                {
                                    <div class="form-control-static">Only One Image Uploaded</div>
                                }

                            }
                        </div>
                    </div>
                </td>
            </tr>
        </table>
    </div>
}
