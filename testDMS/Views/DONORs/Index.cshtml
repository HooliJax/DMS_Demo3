@model testDMS.Models.DonorViewModel
@using PagedList.Mvc


@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<hr />
<div class="well well-lg">
    <h4>Donor Information</h4>
</div>
@*@Html.ActionLink("Create New", "Create")*@
<div style="display: inline-block">
    <input type="button" style="background-color:#0096D7;" class="btn btn-info" value="Create New" onclick="location.href='@Url.Action("Create", "DONORs")'" />
</div>
<div style="display: inline-block;float:right">
    @using (Html.BeginForm("Index", "DONORs", FormMethod.Get))
            {
        <p style="">
            @Html.AntiForgeryToken()
            Search Donors: @Html.TextBox("SearchString")&nbsp
            <input type="submit" value="Filter" /><br />
        </p>
    }
</div><br /><br />

<table class="table table-striped">
    <tr style="background-color:#0096D7">
        <th>
            @Html.DisplayName("Donor")
        </th>
        <th>
            @Html.DisplayName("Email")
        </th>
        <th>
            @Html.DisplayName("Phone")
        </th>
        <th>
            @Html.DisplayName("Address")
        </th>
        <th>
            @Html.DisplayName("Cell")
        </th>
        <th>
            @Html.DisplayName("Company")
        </th>
    </tr>

    @foreach (var item in Model.Donors)
    {

        var displayName = item.FName;
        if (item.FName == null && item.LName == null)
        {
            displayName = item.CompanyName;
        }
        else if (item.LName == null && item.FName != null)
        {
            displayName = item.FName + " - " + item.CompanyName;
        }
        else
        {
            displayName = item.LName + ", " + item.FName + " - " + item.CompanyName;
        }

        <tr>
            <td>
                @Html.ActionLink(displayName, "Details", new { id = item.DonorId })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cell)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CompanyName)
            </td>
        </tr>
    }
</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model.Donors, page => Url.Action("Index", new { page }))
<input type="button" onclick="location.href='@Url.Action("ExportToExcel","DONORs")'" class="btn btn-default" style="background-image:url('../../Images/excel_icon.png');background-size:cover;width:75px;height:75px" />

